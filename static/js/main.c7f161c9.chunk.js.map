{"version":3,"sources":["SideBar/Profile/ProfileAvatar/ProfileAvatar.jsx","SideBar/Profile/Profile.jsx","SideBar/Search/Search.jsx","SideBar/Tabs/Tabs.jsx","SideBar/MeetingButton/MeetingButton.jsx","features/selectedMessageSlice/index.js","selectors/selectedMessageSelector/index.js","SideBar/Chat/ChatUser/ChatUser.jsx","SideBar/Chat/messages/messages.js","SideBar/Chat/Chat.jsx","SideBar/SideBar.jsx","Message/MessageHeader/MessageHeader.jsx","Message/MessageList/UserMessageOther/UserMessageOther.jsx","Message/MessageList/UserMessageMe/UserMessageMe.jsx","Message/MessageList/MessageList.jsx","Message/MessageInput/MessageInput.jsx","Message/Message.jsx","App.js","features/index.js","serviceWorker.js","index.js"],"names":["ProfileAvatar","active","imageUrl","className","Avatar","src","Profile","IconButton","Search","type","name","placeholder","tabs","Tabs","useState","activeTab","setActiveTab","chat","call","contact","notification","onClick","MeetingButton","userMessageSlice","createSlice","initialState","selectedMessage","reducers","setSelectedMessageAction","state","action","payload","actions","selectedMessageSelector","createSelector","mapDispatch","connect","user","userID","messages","lastActiveTime","useSelector","length","message","chatMessages","time","Chat","map","index","key","SideBar","MessageHeader","class","UserMessage","imageURL","UserMessageMe","MessageList","MessageInput","Message","App","reducer","combineReducers","selectedMessageSlice","store","configureStore","devTools","process","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.c7f161c9.chunk.js","sourcesContent":["import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport './ProfileAvatar.scss';\nconst ProfileAvatar = ({ active, imageUrl }) => {\n    const className = active ? 'profileAvatar__icon--active' : '';\n    return (\n        <div className=\"profileAvatar\">\n            <Avatar \n            src={imageUrl} \n            className='profileAvatar__avatar'>\n            </Avatar>\n            <FiberManualRecordIcon className={`profileAvatar__icon ${className}`}/>\n        </div>\n    )\n}\n\nexport default ProfileAvatar\n","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ProfileAvatar from './ProfileAvatar/ProfileAvatar';\nimport './Profile.scss';\nconst Profile = () => {\n    return (\n        <div className='profile'>\n            <ProfileAvatar\n            active\n            imageUrl={'https://scontent.frgn7-1.fna.fbcdn.net/v/t1.0-9/69783494_956063828076672_2353582305148141568_o.jpg?_nc_cat=111&_nc_sid=09cbfe&_nc_eui2=AeHgz6pbjMRfzlre8bjaQApZKNRbH6sWZYwo1FsfqxZljOFphkv_PL-9ipuZZTJAPpfsXfzkoz5BNlGJY0_l_8CZ&_nc_ohc=ouydwfGRtIcAX80wOTd&_nc_ht=scontent.frgn7-1.fna&oh=36a63e29517015ab0d704c7f5ce60bf9&oe=5FA61E0B'} \n            />\n            <div className=\"profile__detail\">\n                <h2 className=\"profile__name\">Ayar Hlaine</h2>\n                <p className=\"profile__occupation\">Web Developer</p>\n            </div>\n            <IconButton>\n                <MoreHorizIcon/>\n            </IconButton>\n        </div>\n    )\n}\n\nexport default Profile;\n","import React from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DialpadIcon from '@material-ui/icons/Dialpad';\nimport './Search.scss';\nconst Search = () => {\n    return (\n        <div className='search'>\n            <div className=\"search__container\">\n                <SearchIcon />\n                <input type=\"text\" name=\"search\" placeholder=\"People, group & messages\"/>\n                <DialpadIcon />\n            </div>\n        </div>\n    )\n}\n\nexport default Search;\n","import React, { useState } from 'react';\nimport InsertCommentOutlinedIcon from '@material-ui/icons/InsertCommentOutlined';\nimport PhoneOutlinedIcon from '@material-ui/icons/PhoneOutlined';\nimport ContactsOutlinedIcon from '@material-ui/icons/ContactsOutlined';\nimport NotificationsOutlinedIcon from '@material-ui/icons/NotificationsOutlined';\nimport './Tabs.scss';\nconst tabs = {\n    chat: 1,\n    call: 2,\n    contact: 3,\n    notification: 4,\n}\nconst Tabs = () => {\n    const [activeTab, setActiveTab] = useState(null);\n    const { chat, call, contact, notification } = tabs;\n    return (\n        <div className='tabs'>\n            <div className=\"tabs__container\">\n                <div \n                className={`tabs__tab ${activeTab === chat ? 'tabs__tab--active' : ''}`}\n                onClick={() => setActiveTab(chat)}>\n                    <InsertCommentOutlinedIcon />\n                    <span>Chats</span>\n                </div>\n                <div \n                className={`tabs__tab ${activeTab === call ? 'tabs__tab--active' : ''}`}\n                onClick={() => setActiveTab(call)}>\n                    <PhoneOutlinedIcon />\n                    <span>Calls</span>\n                </div>\n                <div \n                className={`tabs__tab ${activeTab === contact ? 'tabs__tab--active' : ''}`}\n                onClick={() => setActiveTab(contact)}>\n                    <ContactsOutlinedIcon />\n                    <span>Contacts</span>\n                </div>\n                <div \n                className={`tabs__tab ${activeTab === notification ? 'tabs__tab--active' : ''}`}\n                onClick={() => setActiveTab(notification)}>\n                    <NotificationsOutlinedIcon />\n                    <span>Notifications</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Tabs\n","import React from 'react';\nimport VideocamOutlinedIcon from '@material-ui/icons/VideocamOutlined';\nimport BorderColorOutlinedIcon from '@material-ui/icons/BorderColorOutlined';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport './MeetingButton.scss';\nconst MeetingButton = () => {\n    return (\n        <div className=\"meetingButton\">\n            <div className=\"meetingButton__button\">\n                <VideocamOutlinedIcon />\n                <span>Meet Now</span>\n                <KeyboardArrowDownIcon />\n            </div>\n            <div className=\"meetingButton__button\">\n                <BorderColorOutlinedIcon />\n                <span>New Chat</span>\n                <KeyboardArrowDownIcon />\n            </div>\n        </div>\n    )\n}\n\nexport default MeetingButton\n","import { createSlice } from '@reduxjs/toolkit';\n\n// initial state\nconst initialState = { selectedMessage: null };\n\n// Slice\nconst userMessageSlice = createSlice({\n  name: 'selectedMessage',\n  initialState,\n  reducers: {\n    setSelectedMessageAction(state, action) {\n      state.selectedMessage = action.payload\n    },\n  },\n})\n\nexport const { setSelectedMessageAction } = userMessageSlice.actions;\nexport default userMessageSlice.reducer;","import { createSelector } from 'reselect';\nconst selectedMessageSelector = createSelector(\n    state => state.selectedMessage,\n    selectedMessage => selectedMessage,\n)\nexport {\n    selectedMessageSelector,\n};","import React from 'react';\nimport ProfileAvatar from '../../Profile/ProfileAvatar/ProfileAvatar';\nimport { connect, useSelector } from 'react-redux';\nimport { setSelectedMessageAction } from '../../../features/selectedMessageSlice';\nimport { selectedMessageSelector } from '../../../selectors/selectedMessageSelector';\nimport './ChatUser.scss';\nconst mapDispatch = { setSelectedMessageAction };\nconst ChatUser = ({\n    user,\n    setSelectedMessageAction,\n}) => {\n    const { userID, imageUrl, name, messages, lastActiveTime, active } = user;\n    const { selectedMessage } = useSelector(state => selectedMessageSelector(state));\n    const selectedUserID = selectedMessage ? selectedMessage.userID : 0;\n    const className = userID === selectedUserID ? 'chatUser--active' : '';\n    const onClick = () => {\n        setSelectedMessageAction({\n            ...user\n        });\n    }\n    return (\n        <div className={`chatUser ${className}`} onClick={onClick}>\n            <ProfileAvatar\n            active={active}\n            imageUrl={imageUrl}\n            />\n            <div className=\"chatUser__info\">\n                <h3 className=\"chatUser__info__name\">\n                    {name}\n                </h3>\n                <span className=\"chatUser__info__lastMessage\">\n                    {messages[messages.length -1].message}\n                </span>\n            </div>\n            <div className=\"chatUser__lastActiveTime\">\n                <span className=\"chatUser__activeTime\">{lastActiveTime}</span>\n            </div>\n        </div>\n    )\n}\nexport default connect(null, mapDispatch)(ChatUser);\n","export const chatMessages = [\n    {\n        imageUrl: 'https://gamerhub-uploads.s3.us-west-1.amazonaws.com/mobile-legends/akai.jpg',\n        name: 'Akai',\n        userID: 1,\n        messages: [\n            {\n                user: 'Akai',\n                message: 'Hello',\n                time: '9:06 PM',\n            },\n            {\n                user: 'Akai',\n                message: 'How are you?',\n                time: '9:07 PM'\n            }\n        ],\n        lastActiveTime: '10/2/2020',\n    },\n    {\n        imageUrl: 'https://gamerhub-uploads.s3.us-west-1.amazonaws.com/mobile-legends/angela.jpg',\n        name: 'Angela',\n        userID: 2,\n        messages: [\n            {\n                user: 'Angela',\n                message: 'Hello',\n                time: '9:06 PM',\n            },\n            {\n                user: 'Angela',\n                message: 'How are you?',\n                time: '9:07 PM'\n            }\n        ],\n        lastActiveTime: '10/2/2020',\n    },\n    {\n        imageUrl: 'https://gamerhub-uploads.s3.us-west-1.amazonaws.com/0376e7907489419993f42827fb3ff03d.png',\n        name: 'Carmilla',\n        userID: 3,\n        messages: [\n            {\n                user: 'Carmilla',\n                message: 'Hello',\n                time: '9:06 PM',\n            },\n            {\n                user: 'Carmilla',\n                message: 'How are you?',\n                time: '9:07 PM'\n            }\n        ],\n        lastActiveTime: '10/2/2020',\n    },\n];","import React from 'react';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport ChatUser from './ChatUser/ChatUser';\nimport { chatMessages } from './messages/messages';\nimport './Chat.scss';\nconst Chat = () => {\n    return (\n        <div className='chat'>\n            <h2 className=\"chat__title\">\n                RECENT CHATS\n                <KeyboardArrowDownIcon />\n            </h2>\n            <div className=\"chat__list\">\n                {\n                    chatMessages.map((user, index) => (\n                        <ChatUser\n                        key={index}\n                        user={user}\n                        />\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;\n","import React from 'react';\nimport Profile from './Profile/Profile';\nimport Search from './Search/Search';\nimport Tabs from './Tabs/Tabs';\nimport MeetingButton from './MeetingButton/MeetingButton';\nimport Chat from './Chat/Chat';\nimport './SideBar.scss';\nconst SideBar = () => {\n    return (\n        <div className='sidebar'>\n            <Profile />\n            <Search />\n            <Tabs />\n            <hr className='sidebar__divider'/>\n            <MeetingButton />\n            <Chat />\n        </div>\n    )\n}\n\nexport default SideBar\n","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport VideocamOutlinedIcon from '@material-ui/icons/VideocamOutlined';\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\nimport PhotoLibraryOutlinedIcon from '@material-ui/icons/PhotoLibraryOutlined';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport './MessageHeader.scss';\nconst MessageHeader = () => {\n    return (\n        <div className=\"messageHeader\">\n            <div className=\"messageHeader__left\">\n                <h3 className=\"messageHeader__left__title\">\n                    Akai\n                </h3>\n                <div className=\"messageHeader__left__content\">\n                    <div className=\"messageHeader__left__content__container\">\n                        <FiberManualRecordIcon className=\"messageHeader__left__content__active__status\"/>\n                        <span>Tank Role</span>\n                    </div>\n                    <div class=\"vl\"/>\n                    <div className=\"messageHeader__left__content__container\">\n                        <PhotoLibraryOutlinedIcon />\n                        <span>Gallery</span>\n                    </div>\n                    <div class=\"vl\"/>\n                    <div className=\"messageHeader__left__content__container\">\n                        <SearchOutlinedIcon />\n                        <span>Find</span>\n                    </div>\n                        \n                </div>\n            </div>\n            <div className=\"messageHeader__right\">\n                <IconButton className='messageHeader__right__button'>\n                    <VideocamOutlinedIcon />\n                </IconButton>\n                <IconButton className='messageHeader__right__button'>\n                    <CallOutlinedIcon />\n                </IconButton>\n                <IconButton className='messageHeader__right__button'>\n                    <PersonAddOutlinedIcon />\n                </IconButton>\n            </div>\n        </div>\n    )\n}\n\nexport default MessageHeader\n","import React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport './UserMessageOther.scss';\nconst UserMessage = ({ imageURL, user, time, message }) => {\n    return (\n        <div className='userMessageOther'>\n            <Avatar src={imageURL}/>\n            <div className=\"userMessageOther__detail\">\n                <span className=\"userMessageOther__detail__time\">{user}, {time}</span>\n                <div className=\"userMessageOther__detail__info\">\n                    <p>{message}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default UserMessage;\n","import React from 'react';\nimport './UserMessageMe.scss';\nconst UserMessageMe = ({ time, message }) => {\n    return (\n        <div className=\"userMessageMe\">\n            <div className=\"userMessageMe__detail\">\n                <span className=\"userMessageMe__detail__time\">{time}</span>\n                <div className=\"userMessageMe__detail__info\">\n                    <p>{message}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserMessageMe;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './MessageList.scss';\nimport UserMessageOther from './UserMessageOther/UserMessageOther';\nimport UserMessageMe from './UserMessageMe/UserMessageMe';\nimport { selectedMessageSelector } from '../../selectors/selectedMessageSelector';\nconst MessageList = () => {\n    const { selectedMessage } = useSelector(state => selectedMessageSelector(state));\n    const messages  = selectedMessage ? selectedMessage.messages : [];\n    const imageUrl  = selectedMessage ? selectedMessage.imageUrl : '';\n    return (\n        <div className='messageList'>\n            {\n                messages.map(({ user, message, time }, index) => (\n                    <UserMessageOther\n                    imageURL={imageUrl}\n                    user={user}\n                    time={time}\n                    message={message}\n                    key={index}\n                    />\n                ))\n            }\n            <UserMessageMe\n            time=\"10:06 AM\"\n            message=\"Hey, I am fine.\"\n            />\n        </div>\n    )\n}\n\nexport default MessageList\n","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport SentimentSatisfiedOutlinedIcon from '@material-ui/icons/SentimentSatisfiedOutlined';\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\nimport ContactPhoneOutlinedIcon from '@material-ui/icons/ContactPhoneOutlined';\nimport MicNoneOutlinedIcon from '@material-ui/icons/MicNoneOutlined';\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\nimport './MessageInput.scss';\nconst MessageInput = () => {\n    return (\n        <div className=\"messageInput\">\n            <div className=\"messageInput__input\">\n                <div className=\"messageInput__input__container\">\n                    <SentimentSatisfiedOutlinedIcon />\n                    <input type=\"text\" name=\"messageInput\" placeholder=\"Type a message\"/>\n                </div>\n            </div>\n            <div className=\"messageInput__buttons\">\n                <IconButton className=\"messageInput__buttons__button\">\n                    <FileCopyOutlinedIcon />\n                </IconButton>\n                <IconButton className=\"messageInput__buttons__button\">\n                    <ContactPhoneOutlinedIcon />\n                </IconButton>\n                <IconButton className=\"messageInput__buttons__button\">\n                    <MicNoneOutlinedIcon />\n                </IconButton>\n                <IconButton className=\"messageInput__buttons__button\">\n                    <MoreHorizOutlinedIcon />\n                </IconButton>\n            </div>\n        </div>\n    )\n}\n\nexport default MessageInput\n","import React from 'react';\nimport MessageHeader from './MessageHeader/MessageHeader';\nimport MessageList from './MessageList/MessageList';\nimport MessageInput from './MessageInput/MessageInput';\nimport './Message.scss';\nconst Message = () => {\n    return (\n        <div className='message'>\n            <MessageHeader />\n            <hr className='message__divider'/>\n            <MessageList />\n            <MessageInput />\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react';\nimport SideBar from './SideBar/SideBar';\nimport Message from './Message/Message';\nimport './App.scss';\n\nexport function App() {\n  return (\n    <div className=\"app\">\n      <div className=\"app__body\">\n        <SideBar />\n        <Message />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport selectedMessageSlice from './selectedMessageSlice';\nconst reducer = combineReducers({\n    selectedMessage: selectedMessageSlice,\n});\nconst store = configureStore({\n    reducer,\n    devTools: process.env.NODE_ENV !== 'production',\n});\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.scss';\nimport App from './App';\nimport store from './features';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}